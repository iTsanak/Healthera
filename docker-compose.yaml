services:
  postgres-db:
    image: postgres:16.3
    restart: always
    container_name: postgres-db1
    ports:
      - 5601:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-my_django}
      POSTGRES_USER: ${POSTGRES_USER:-postgresuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgrespassword}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - app-network

  # backend:
  #   build: ./backend/
  #   command: >
  #     sh -c "
  #           python manage.py makemigrations &&
  #           python manage.py migrate &&
  #           daphne -b 0.0.0.0 -p 8000 core.asgi:application
  #           "
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8000/"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #   volumes:
  #     - ./backend:/app
  #   ports:
  #     - "8000:8000"
  #     # - "8899:8899"
  #   depends_on:
  #     - postgres-db
  #   environment:
  #     - DEBUG=${DEBUG:-True}
  #     - SECRET_KEY=${SECRET_KEY:-django-insecure-e3-dfc5$67!z!scs=mex6xmq=5l@1u4g)ckajac+dhh)jl*91o}
  #     - DJANGO_SETTINGS_MODULE=core.settings

  #     - POSTGRES_DB=${POSTGRES_DB:-my_django}
  #     - POSTGRES_USER=${POSTGRES_USER:-postgresuser}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgrespassword}
  #     - POSTGRES_HOST=${POSTGRES_HOST:-postgres-db}
  #     - POSTGRES_PORT=${POSTGRES_PORT:-5432}

  #     # 127.0.0.1
  #     - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*}
  #     - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS:-http://localhost:8000}
  #     - CORS_ALLOW_ALL_ORIGINS=${CORS_ALLOW_ALL_ORIGINS:-True}
  #     - ACCOUNT_EMAIL_VERIFICATION=${ACCOUNT_EMAIL_VERIFICATION:-none}
  #     - EMAIL_BACKEND=${EMAIL_BACKEND:-django.core.mail.backends.console.EmailBackend}

  #     - GEMINI_API_KEY=${GEMINI_API_KEY:-SomeKey}
  #   networks:
  #     - app-network

volumes:
  pg_data:

networks:
  app-network:
    driver: bridge
